# creating table

CREATE TABLE CUSTOMERS (
   ID INT NOT NULL,
   NAME VARCHAR(20) NOT NULL,
   AGE INT NOT NULL,
   ADDRESS CHAR (25),
   SALARY DECIMAL (18, 2),
   PRIMARY KEY (ID)
);

#Inserting Values

INSERT INTO CUSTOMERS VALUES 
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Delhi', 1500.00),
(3, 'Kaushik', 23, 'Kota', 2000.00),
(4, 'Chaitali', 25, 'Mumbai', 6500.00),
(5, 'Hardik', 27, 'Bhopal', 8500.00),
(6, 'Komal', 22, 'Hyderabad', 4500.00),
(7, 'Muffy', 24, 'Indore', 10000.00);

#select subquery

SELECT * FROM CUSTOMERS 
WHERE ID IN (SELECT ID FROM CUSTOMERS WHERE SALARY > 4500);

#insert Subquery

CREATE TABLE CUSTOMERS_BKP (
   ID INT NOT NULL,
   NAME VARCHAR(20) NOT NULL,
   AGE INT NOT NULL,
   ADDRESS CHAR (25),
   SALARY DECIMAL (18, 2),
   PRIMARY KEY (ID)
);


INSERT INTO CUSTOMERS_BKP 
SELECT * FROM CUSTOMERS 
WHERE ID IN (SELECT ID FROM CUSTOMERS);


#update subquery

UPDATE CUSTOMERS 
SET SALARY = SALARY * 0.25 
WHERE AGE IN (SELECT AGE FROM CUSTOMERS_BKP WHERE AGE >= 27 );

#delete Subquery

DELETE FROM CUSTOMERS 
WHERE AGE IN (SELECT AGE FROM CUSTOMERS_BKP WHERE AGE >= 27 );




Two tables


CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    department VARCHAR(50)
);

CREATE TABLE salaries (
    employee_id INT,
    salary INT,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);


-- Insert values into the employees table
INSERT INTO employees (employee_id, first_name, last_name, department) 
VALUES 
    (1, 'John', 'Doe', 'Engineering'),
    (2, 'Jane', 'Smith', 'Marketing'),
    (3, 'Alice', 'Johnson', 'Sales');

-- Insert values into the salaries table
INSERT INTO salaries (employee_id, salary) 
VALUES 
    (1, 60000),
    (2, 55000),
    (3, 58000),
    (1, 65000),
    (2, 53000),
    (3, 52000);


-- Select employees who have a salary greater than the average salary
SELECT first_name, last_name
FROM employees
WHERE employee_id IN (
    SELECT employee_id
    FROM salaries
    WHERE salary > (SELECT AVG(salary) FROM salaries)
);


-- Update the department of employees who have a salary greater than 58000 to 'Senior Management'
UPDATE employees
SET department = 'Senior Management'
WHERE employee_id IN (
    SELECT employee_id
    FROM salaries
    WHERE salary > 58000
);


-- Delete employees who have a salary less than the average salary
DELETE FROM employees
WHERE employee_id IN (
    SELECT employee_id
    FROM salaries
    WHERE salary < (SELECT AVG(salary) FROM salaries)
);


